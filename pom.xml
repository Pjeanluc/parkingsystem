<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.parkit</groupId>
	<artifactId>parking-system</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

<!-- ***************************************************************** -->
<!-- ************************* PROPERTIES **************************** -->	
<!-- ***************************************************************** -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

<!-- ***************************************************************** -->
<!-- *********************** DEPENDENCIES **************************** -->	
<!-- ***************************************************************** -->
	<dependencies>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.12.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.12.1</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.17</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.23.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.5</version>
			<type>maven-plugin</type>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<version>3.0.0</version>
			<!-- <version>3.1.0</version> -->
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.15.0</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.spotbugs/spotbugs-maven-plugin -->
		<dependency>
		    <groupId>com.github.spotbugs</groupId>
		    <artifactId>spotbugs-maven-plugin</artifactId>
		    <version>3.1.12.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
		<dependency>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-failsafe-plugin</artifactId>
		    <version>3.0.0-M4</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	
<!-- ***************************************************************** -->
<!-- ************************* REPORTING ***************************** -->	
<!-- ***************************************************************** -->
	<reporting>
		<plugins>
<!-- 		Rapport Soptbugs -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>3.1.12.2</version>
				<configuration>
					<failOnError>false</failOnError>
					<reportPlugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
<!-- 	      Rapport Surefire -->
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-report-plugin</artifactId>
	        <version>3.0.0-M4</version>
	      </plugin>
<!--            Rapport JACOCO -->
           <plugin>
	        <groupId>org.jacoco</groupId>
	        <artifactId>jacoco-maven-plugin</artifactId>
	        <reportSets>
	          <reportSet>
	            <reports>
	              <report>report</report> 
	            </reports>
	          </reportSet>
	        </reportSets>
	      </plugin>
		</plugins>
	</reporting>
<!-- ***************************************************************** -->
<!-- *************************   BUILD   ***************************** -->	
<!-- ***************************************************************** -->	
	<build>
	<plugins>
        <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-project-info-reports-plugin</artifactId>
		    <version>2.9</version>
		</plugin>
		<plugin>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-maven-plugin</artifactId>
			<version>3.1.12.2</version>
			<configuration>
                <failOnError>false</failOnError>
			</configuration>
		</plugin>
		<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<mainClass>
										com.parkit.parkingsystem.App
									</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<!-- <descriptorRef>executable-jar-with-dependencies</descriptorRef> -->
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<dependencies>
					<dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.2.0</version>
					</dependency>
				</dependencies>
				<configuration>
			        <!-- Sets the VM argument line used when unit tests are run. -->
			        <argLine>${surefireArgLine}</argLine>
			        <!-- Skips unit tests if the value of skip.unit.tests property is true -->
			        <skipTests>${skip.unit.tests}</skipTests>
			        <!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/*IT.java</exclude>
						<exclude>*com/parkit/parkingsystem/dao/**/*</exclude>
			            <exclude>*com/parkit/parkingsystem/App.java</exclude>
			        </excludes>
				</configuration>
			</plugin>
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-failsafe-plugin</artifactId>
		        <version>3.0.0-M4</version>
		        <executions>
		          <execution>
		            <id>integration-tests</id>
		            <goals>
		              <goal>integration-test</goal>
		              <goal>verify</goal>
		            </goals>
		 			<configuration>
		                <!-- Sets the VM argument line used when integration tests are run. -->
		                <argLine>${failsafeArgLine}</argLine>
		                <!--
		                    Skips integration tests if the value of skip.integration.tests property
		                    is true
		                -->
		                <skipTests>${skip.integration.tests}</skipTests>
		            </configuration>
				  </execution>
		        </executions>
	        </plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>surefireArgLine</propertyName>
			           	</configuration>
					</execution>
			        <execution>
			            <id>post-unit-test</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			            	<title>${project.name} : Tests unitaires</title>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
			            </configuration>
			        </execution>
					<!-- ajout pour integ -->
					<execution>
						<id>jacoco-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-report-integration</id>
						<phase>integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
			            <id>pre-integration-test</id>
			            <phase>pre-integration-test</phase>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>${project.build.directory}/jacoco-it.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>failsafeArgLine</propertyName>
			            </configuration>
			        </execution>
			        <!--
			            Ensures that the code coverage report for integration tests after
			            integration tests have been run.
			        -->
			        <execution>
			            <id>post-integration-test</id>
			            <phase>post-integration-test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			            	<title>${project.name} : Tests d'intégration</title>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
			            </configuration>
			        </execution>
			        <!-- Merce UT et IT -->
			        <execution>
					  <id>merge-unit-and-integration</id>
					    <phase>post-integration-test</phase>
					      <goals>
					        <goal>merge</goal>
					      </goals>
					      <configuration>
					      <fileSets>
					        <fileSet>
					          <directory>${project.build.directory}</directory> 
					          <includes>
					            <include>*.exec</include>
					          </includes>
					        </fileSet>
					      </fileSets>
					      <destFile>${project.build.directory}/jacoco-merged.exec</destFile>
					    </configuration>
					  </execution>
					<execution>
					  <id>create-merged-report</id>
					  <phase>post-integration-test</phase>
					  <goals>
					    <goal>report</goal>
					  </goals>
					  <configuration>
					    <title>${project.name} : Fusion tests unitaires et d'intégration</title>
					    <dataFile>${project.build.directory}/jacoco-merged.exec</dataFile>
					    <outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
					  </configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>